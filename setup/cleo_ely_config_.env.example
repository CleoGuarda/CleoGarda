# syntax=docker/dockerfile:1.3-labs

########################
# 1. Build dependencies
########################
FROM python:3.10-slim AS builder
WORKDIR /app

ENV PIP_CACHE_DIR=/root/.cache/pip \
    PYTHONUNBUFFERED=1

# Install system tools & dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc libpq-dev && \
    rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY backend/requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

########################
# 2. Final runtime image
########################
FROM python:3.10-slim
WORKDIR /app

# Create dedicated non-root user
RUN addgroup --system appgroup && \
    adduser --system --ingroup appgroup appuser

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY backend/ ./backend/
COPY scripts/ ./scripts/

# Use non-root user
USER appuser

# Optional: Healthcheck for local TCP
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s \
  CMD python -c "import socket; socket.create_connection(('localhost', 5000), 2).close()"

# Expose backend port
EXPOSE 5000

# Default command to run the service
ENTRYPOINT ["python", "-u", "backend/alyssium_oracle.py"]
