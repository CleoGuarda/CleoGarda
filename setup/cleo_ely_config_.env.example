# syntax=docker/dockerfile:1.3-labs

###########
# Builder #
###########
FROM python:3.10-slim AS builder
WORKDIR /app

ENV PIP_CACHE_DIR=/root/.cache/pip

# Install build deps, install Python requirements, then clean up
COPY backend/requirements.txt .
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc libpq-dev && \
    pip install --upgrade pip setuptools wheel && \
    pip install --cache-dir "$PIP_CACHE_DIR" -r requirements.txt && \
    apt-get purge -y --auto-remove gcc libpq-dev && \
    rm -rf /var/lib/apt/lists/*

##############
# Final image#
##############
FROM python:3.10-slim

# Create a non-root user
RUN addgroup --system appgroup && \
    adduser --system --ingroup appgroup appuser

WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY backend/ ./backend/
COPY scripts/ ./scripts/

# Switch to non-root user
USER appuser

# Healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s \
  CMD ["sh", "-c", "python - << 'EOF'\nimport socket\nsock=socket.create_connection(('localhost',5000),1)\nsock.close()\nEOF\n || exit 1"]

EXPOSE 5000

# Default command
CMD ["python", "backend/alyssium_oracle.py"]
